C:37:"PHPUnit\Runner\DefaultTestResultCache":14648:{a:2:{s:7:"defects";a:79:{s:35:"JsonToPHPConverterTest::testIfWorks";i:5;s:44:"JsonToPHPConverterTest::testIfIsInstantiable";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #0";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #1";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #2";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #3";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #4";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #5";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #6";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #7";i:5;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #8";i:5;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #0";i:5;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #1";i:5;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #2";i:5;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #3";i:5;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #4";i:5;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #5";i:5;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #6";i:5;s:34:"CommandLineParserTest::testIfWorks";i:5;s:30:"ConfigDTOImplTest::testIfWorks";i:5;s:39:"ConfigDTOImplTest::testIfIsInstantiable";i:5;s:75:"ConfigDTOImplTest::testIfIsCommandAvailableReturnsTrueIfIs with data set #0";i:5;s:75:"ConfigDTOImplTest::testIfIsCommandAvailableReturnsTrueIfIs with data set #1";i:5;s:77:"ConfigDTOImplTest::testIfIsCommandAvailableReturnsFalseIfNot with data set #0";i:5;s:77:"ConfigDTOImplTest::testIfIsCommandAvailableReturnsFalseIfNot with data set #1";i:5;s:64:"ConfigDTOImplTest::testIfGetSyntaxReturnsCorrectResultWhenExists";i:5;s:65:"ConfigDTOImplTest::testIfGetSyntaxReturnsCorrectNullWhenIsMissing";i:5;s:65:"ConfigDTOImplTest::testIfGetSyntaxReturnsCorrectNullWhenNotString";i:5;s:75:"ConfigDTOImplTest::testIfGetGenericOptionsReturnsCorrectResultWhenTheyExist";i:5;s:77:"ConfigDTOImplTest::testIfGetGenericOptionsReturnsEmptyArrayWhenTheyAreMissing";i:5;s:73:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsDetailsWhenCommandExists";i:5;s:60:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsWhenMissing";i:5;s:70:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsEmptyArrayWhenMissing";i:5;s:89:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsEmptyArrayWhenValueOfDetailsIsEmptyArray";i:5;s:86:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsEmptyNullWhenValueOfDetailsIsNotArray";i:5;s:97:"ConfigDTOImplTest::testIfGetSpecificOptionsForCommandReturnsCorrectResultWhenTheyExistAndAreArray";i:5;s:88:"ConfigDTOImplTest::testIfGetSpecificOptionsForCommandReturnsEmptyArrayWhenTheyAreMissing";i:5;s:89:"ConfigDTOImplTest::testIfGetSpecificOptionsForCommandReturnsEmptyArrayWhenTheyAreNotArray";i:5;s:78:"ConfigDTOImplTest::testIfGetOptionsForCommandReturnsCorrectResultWhenTheyExist";i:5;s:91:"ConfigDTOImplTest::testIfGetOptionsForCommandHasNoReturnsEmptyArrayWhenAllOptionsAreMissing";i:5;s:90:"ConfigDTOImplTest::testIfGetOptionsForCommandReturnsOnlyGenericOptionsWhenCommandIsMissing";i:5;s:86:"ConfigDTOImplTest::testIfIsGenericOptionAvailableReturnsCorrectResult with data set #0";i:5;s:86:"ConfigDTOImplTest::testIfIsGenericOptionAvailableReturnsCorrectResult with data set #1";i:5;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #0";i:5;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #1";i:5;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #2";i:5;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #3";i:5;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #4";i:5;s:84:"ConfigDTOImplTest::testIfGetGenericOptionDetailsReturnsCorrectResultWhenOptionExists";i:5;s:76:"ConfigDTOImplTest::testIfGetGenericOptionDetailsReturnsNullWhenOptionMissing";i:5;s:81:"ConfigDTOImplTest::testIfGetGenericOptionDetailsReturnsNullWhenDetailsAreNotArray";i:5;s:88:"ConfigDTOImplTest::testIfIsOptionAvailableForCommandReturnsCorrectValue with data set #0";i:5;s:88:"ConfigDTOImplTest::testIfIsOptionAvailableForCommandReturnsCorrectValue with data set #1";i:5;s:31:"ArrayTraverserTest::testIfWorks";i:5;s:40:"ArrayTraverserTest::testIfIsInstantiable";i:5;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #0";i:5;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #1";i:5;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #2";i:5;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #3";i:5;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #4";i:5;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #5";i:5;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #0";i:5;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #1";i:5;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #2";i:5;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #3";i:5;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #4";i:5;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #5";i:5;s:69:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsReturnsArray";i:5;s:105:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsReturnsResultForSingleIfPassedSingleChainInArray";i:5;s:100:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsIgnoresNonExistingKeysWhenPassedSingleArray";i:5;s:79:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsIgnoresNonArrayInArray";i:5;s:91:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsAcceptsMultipleChainsPassedAsArray";i:5;s:106:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsIgnoresNonStringsWhenPassingMultipleChainsAsArray";i:5;s:116:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsIgnoresNonExistingKeyChainsWhenPassingMultipleChainsAsArray";i:5;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #0";i:5;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #1";i:5;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #2";i:5;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #3";i:5;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #4";i:5;}s:5:"times";a:79:{s:35:"JsonToPHPConverterTest::testIfWorks";d:0;s:44:"JsonToPHPConverterTest::testIfIsInstantiable";d:0.001;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #0";d:0.005;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #1";d:0;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #2";d:0;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #3";d:0;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #4";d:0;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #5";d:0;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #6";d:0;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #7";d:0;s:80:"JsonToPHPConverterTest::testConvertReturnsArrayOnValidJsonInput with data set #8";d:0;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #0";d:0.001;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #1";d:0.002;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #2";d:0.001;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #3";d:0.001;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #4";d:0.001;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #5";d:0.001;s:93:"JsonToPHPConverterTest::testConvertOutputsExceptionMessageOnInvalidJsonInput with data set #6";d:0.001;s:34:"CommandLineParserTest::testIfWorks";d:0;s:30:"ConfigDTOImplTest::testIfWorks";d:0;s:39:"ConfigDTOImplTest::testIfIsInstantiable";d:0;s:75:"ConfigDTOImplTest::testIfIsCommandAvailableReturnsTrueIfIs with data set #0";d:0;s:75:"ConfigDTOImplTest::testIfIsCommandAvailableReturnsTrueIfIs with data set #1";d:0;s:77:"ConfigDTOImplTest::testIfIsCommandAvailableReturnsFalseIfNot with data set #0";d:0;s:77:"ConfigDTOImplTest::testIfIsCommandAvailableReturnsFalseIfNot with data set #1";d:0.001;s:64:"ConfigDTOImplTest::testIfGetSyntaxReturnsCorrectResultWhenExists";d:0;s:65:"ConfigDTOImplTest::testIfGetSyntaxReturnsCorrectNullWhenIsMissing";d:0;s:65:"ConfigDTOImplTest::testIfGetSyntaxReturnsCorrectNullWhenNotString";d:0;s:75:"ConfigDTOImplTest::testIfGetGenericOptionsReturnsCorrectResultWhenTheyExist";d:0;s:77:"ConfigDTOImplTest::testIfGetGenericOptionsReturnsEmptyArrayWhenTheyAreMissing";d:0;s:73:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsDetailsWhenCommandExists";d:0;s:60:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsWhenMissing";d:0;s:70:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsEmptyArrayWhenMissing";d:0.001;s:89:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsEmptyArrayWhenValueOfDetailsIsEmptyArray";d:0;s:86:"ConfigDTOImplTest::testIfGetCommandDetailsReturnsEmptyNullWhenValueOfDetailsIsNotArray";d:0;s:97:"ConfigDTOImplTest::testIfGetSpecificOptionsForCommandReturnsCorrectResultWhenTheyExistAndAreArray";d:0;s:88:"ConfigDTOImplTest::testIfGetSpecificOptionsForCommandReturnsEmptyArrayWhenTheyAreMissing";d:0;s:89:"ConfigDTOImplTest::testIfGetSpecificOptionsForCommandReturnsEmptyArrayWhenTheyAreNotArray";d:0;s:78:"ConfigDTOImplTest::testIfGetOptionsForCommandReturnsCorrectResultWhenTheyExist";d:0.001;s:91:"ConfigDTOImplTest::testIfGetOptionsForCommandHasNoReturnsEmptyArrayWhenAllOptionsAreMissing";d:0;s:90:"ConfigDTOImplTest::testIfGetOptionsForCommandReturnsOnlyGenericOptionsWhenCommandIsMissing";d:0;s:86:"ConfigDTOImplTest::testIfIsGenericOptionAvailableReturnsCorrectResult with data set #0";d:0;s:86:"ConfigDTOImplTest::testIfIsGenericOptionAvailableReturnsCorrectResult with data set #1";d:0;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #0";d:0;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #1";d:0;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #2";d:0;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #3";d:0;s:86:"ConfigDTOImplTest::testIfGetDescriptionForCommandReturnsCorrectResult with data set #4";d:0;s:84:"ConfigDTOImplTest::testIfGetGenericOptionDetailsReturnsCorrectResultWhenOptionExists";d:0;s:76:"ConfigDTOImplTest::testIfGetGenericOptionDetailsReturnsNullWhenOptionMissing";d:0;s:81:"ConfigDTOImplTest::testIfGetGenericOptionDetailsReturnsNullWhenDetailsAreNotArray";d:0;s:88:"ConfigDTOImplTest::testIfIsOptionAvailableForCommandReturnsCorrectValue with data set #0";d:0;s:88:"ConfigDTOImplTest::testIfIsOptionAvailableForCommandReturnsCorrectValue with data set #1";d:0;s:31:"ArrayTraverserTest::testIfWorks";d:0;s:40:"ArrayTraverserTest::testIfIsInstantiable";d:0;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #0";d:0;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #1";d:0;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #2";d:0;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #3";d:0;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #4";d:0;s:83:"ArrayTraverserTest::testIfNestedKeyChainExistsReturnsCorrectResult with data set #5";d:0;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #0";d:0;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #1";d:0;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #2";d:0;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #3";d:0;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #4";d:0;s:87:"ArrayTraverserTest::testIfGetValueByNestedKeyChainReturnsCorrectResult with data set #5";d:0;s:69:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsReturnsArray";d:0;s:105:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsReturnsResultForSingleIfPassedSingleChainInArray";d:0;s:100:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsIgnoresNonExistingKeysWhenPassedSingleArray";d:0;s:79:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsIgnoresNonArrayInArray";d:0;s:91:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsAcceptsMultipleChainsPassedAsArray";d:0;s:106:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsIgnoresNonStringsWhenPassingMultipleChainsAsArray";d:0;s:116:"ArrayTraverserTest::testIfMergeValuesForMultipleKeyChainsIgnoresNonExistingKeyChainsWhenPassingMultipleChainsAsArray";d:0;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #0";d:0;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #1";d:0;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #2";d:0;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #3";d:0;s:87:"ArrayTraverserTest::testIfGetValueIfKeyChainExistsReturnsCorrectResult with data set #4";d:0;}}}